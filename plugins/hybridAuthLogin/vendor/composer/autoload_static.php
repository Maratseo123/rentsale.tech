<?php

// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInit74f36cc1b2ae5cacbeb8df9928427728
{
    public static $prefixLengthsPsr4 = array (
        'S' => 
        array (
            'Symfony\\Component\\Filesystem\\' => 29,
        ),
        'H' => 
        array (
            'Hybridauth\\' => 11,
        ),
        'F' => 
        array (
            'Flynax\\Plugins\\HybridAuth\\' => 26,
            'Flynax\\Components\\Image\\Uploader\\' => 33,
            'Flynax\\Components\\' => 18,
            'Flynax\\Component\\' => 17,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'Symfony\\Component\\Filesystem\\' => 
        array (
            0 => __DIR__ . '/..' . '/symfony/filesystem',
        ),
        'Hybridauth\\' => 
        array (
            0 => __DIR__ . '/..' . '/hybridauth/hybridauth/src',
        ),
        'Flynax\\Plugins\\HybridAuth\\' => 
        array (
            0 => __DIR__ . '/../..' . '/src',
        ),
        'Flynax\\Components\\Image\\Uploader\\' => 
        array (
            0 => __DIR__ . '/..' . '/flynax-components/image-uploader/src',
        ),
        'Flynax\\Components\\' => 
        array (
            0 => __DIR__ . '/..' . '/flynax-components/objects-container/src',
        ),
        'Flynax\\Component\\' => 
        array (
            0 => __DIR__ . '/..' . '/flynax/filesystem/src',
        ),
    );

    public static $classMap = array (
        'Composer\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',
    );

    public static function getInitializer(ClassLoader $loader)
    {
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInit74f36cc1b2ae5cacbeb8df9928427728::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInit74f36cc1b2ae5cacbeb8df9928427728::$prefixDirsPsr4;
            $loader->classMap = ComposerStaticInit74f36cc1b2ae5cacbeb8df9928427728::$classMap;

        }, null, ClassLoader::class);
    }
}
